#! /usr/bin/env bash
# This script must be sourced
#
# Set up the environment to deploy to a Riff AWS docker swarm
# Takes 1 argument, the swarm environment name (staging, beta, etc)
#   defaults to 'staging'
# After this script is sourced: the python environment is activated,
# a tunnel to an aws docker manager is created and the DOCKER_HOST points at it,
# other production deployment environment variables are set.

# Quick test to see if this script is being sourced
# https://stackoverflow.com/a/28776166/2184226
(return 0 2>/dev/null) && sourced=1 || sourced=0

if [[ $sourced -ne 1 ]]
then
    echo "This script must be sourced!"
    exit 1
fi

# Test this is being run from the root of the riff-docker repo working dir
if [[ ! ( -e Makefile && -e bin/docker-swarm.py && -e bin/deploy-vars ) ]]; then
    echo "You do not seem to have sourced this script from the root of the edu-docker working directory."
    echo "Change to the edu-docker working directory and run:"
    echo "  . bin/tunnel"
    echo
    return
fi

# Set the AWS stack variables (the stack suffix and the region, keypair maps) and the
# derived variables for '$1' (DEPLOY_SWARM, AWS_CF_STACK_NAME, AWS_STACK_REGION, AWS_STACK_KEYPAIR)
source bin/aws_stack_vars ${1:-staging}

# if $1 was invalid DEPLOY_SWARM won't be set
if [[ ! -v DEPLOY_SWARM ]]
then
    echo "$1 is not a valid swarm name."
    echo "The swarm name must be one of: ${SWARM_NAMES[@]}"
    return
fi

echo "Environment is set up to deploy to the AWS \"${1:-staging}\" swarm"

REGION_OPT=${AWS_STACK_REGION:+"--region=$AWS_STACK_REGION"}

source bin/deploy-vars
source activate
bin/docker-swarm.py tunnel $REGION_OPT ${AWS_CF_STACK_NAME}
export DOCKER_HOST=localhost:2374

# Check that login credentials exist to access the registry where we store the images
# Note that when tunneling the credentials will be local, as opposed to remote logging
# in when the credentials must exist on the remote system.
IMAGE_REGISTRY=docker.pkg.github.com
if ! bin/docker-login-check.sh -q "$IMAGE_REGISTRY"; then
    echo "!!! You will have to provide docker login credentials for the $IMAGE_REGISTRY registry"
    echo "    before you will be able to deploy."
    echo
fi

make show-env

echo
echo 'Run the following if the env settings are good'
echo '(or edit bin/deploy-vars and source it first):'
echo '  make deploy-stack'
echo
