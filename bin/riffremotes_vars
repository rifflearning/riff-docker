#! /usr/bin/env bash
# Deployment variables for riffremote AWS instances

# Valid swarm names (used to index into OWNERS and IMAGE_VERS)
# keep alphabetical after 'riffai'
DEPLOY_NAMES=( emeritus
               learningseeds
               ude-vet
             )

# OWNERS is an associative array of the DEPLOY_NAMES site owner names and email addresses
# Email is rot13. in vim use 'g?'
declare -A OWNERS
OWNERS=( [emeritus.name]="Ashley Chiampo"
         [emeritus.email]="nfuyrl.puvnzcb@rzrevghf.bet"
         [learningseeds.name]="Erica Key"
         [learningseeds.email]="revpn@YrneavatFrrqf.pbz"
         [ude-vet.name]="Esther Winther"
         [ude-vet.email]="wrffvpn.cnrffraf@hav-qhr.qr"
       )

# IMAGE_VERS is an associative array of the DEPLOY_NAMES image versions deployed on that instance
declare -A IMAGE_VERS
IMAGE_VERS=( [emeritus.riffrtc]="3.1.0-dev.1"
             [emeritus.riffdata]="2.2.1"
             [learningseeds.riffrtc]="3.1.0-dev.1"
             [learningseeds.riffdata]="2.2.1"
             [ude-vet.riffrtc]="3.1.0-dev.1"
             [ude-vet.riffdata]="2.2.1"
           )

# If we were given a swarm name as an argument, make sure that all the derived parameters are
# unset in case it is invalid, but leave them alone if no argument was given.
if [[ -n "$1" ]]
then
    REQ_DEPLOY=$1
    unset DEPLOY_SWARM
    unset RIFF_RTC_TAG
    unset RIFF_SERVER_TAG
else
    REQ_DEPLOY=$DEPLOY_SWARM
fi

if [ "$1" == "--clear" ]
then
    unset REQ_DEPLOY
    return
fi

# If we were given a valid swarm name as an argument, use it to populate the deployment environment vars
if [[ -v IMAGE_VERS[$REQ_DEPLOY.riffrtc] ]]
then
    export DEPLOY_SWARM=$REQ_DEPLOY
    # The docker-compose.yml file uses these values to determine which image to deploy to the swarm
    export RIFF_RTC_TAG=${IMAGE_VERS[$DEPLOY_SWARM.riffrtc]}
    export RIFF_SERVER_TAG=${IMAGE_VERS[$DEPLOY_SWARM.riffdata]}
fi
